<<<<<<< HEAD
import * as React from 'react';
import { FieldRefs, FieldValues, InternalFieldName } from '../types';
export default function getFieldValue<TFieldValues extends FieldValues>(fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>, name: InternalFieldName<TFieldValues>, shallowFieldsStateRef?: React.MutableRefObject<Partial<FieldValues>>, excludeDisabled?: boolean, shouldKeepRawValue?: boolean): any;
=======
import * as React from 'react';
import { FieldRefs, FieldValues, InternalFieldName } from '../types';
export default function getFieldValue<TFieldValues extends FieldValues>(fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>, name: InternalFieldName<TFieldValues>, shallowFieldsStateRef?: React.MutableRefObject<Partial<FieldValues>>, excludeDisabled?: boolean, shouldKeepRawValue?: boolean): any;
>>>>>>> 139046cbc3c78e4df2d6a69948f0a4981a1e95f8
